
function temps() {
    this.data
    this.creeCarte = function (id, id_out, titre1) {
        this.id1 = id
        console.log(id_out)
        var de = document.getElementById(this.id1)
        var div1 = document.createElement("div")
        var card = document.createElement("div")
        var card_body = document.createElement("div")
        var titre = document.createElement("h4")
        titre.className = "header-title"
        titre.innerText = titre1
        card_body.id = titre1
        card_body.className = "card-body"
        card.className = "card"
        div1.className = "col-xl-4 col-lg-6 order-lg-3"
        card_body.appendChild(titre)
        card.appendChild(card_body)
        div1.appendChild(card)
        de.appendChild(div1)
    }
    this.Map = function (value, in_min, in_max, out_min, out_max) {
        return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    }
    this.Temp = function (id, data = { titre: "", type: "Temps", vertical: false, progres: { id: "", label: ["", " %"], value: 0, max: 0, min: 0, height: "20%", width: "20%", color: "#0acf97", }, }) {
        this.data = data
        this.creeCarte(id, (this.data['progres']['id'] != undefined ? this.data['progres']['id'] : "pas de id"), (this.data['titre'] != undefined ? this.data['titre'] : "pas de titre"))
        this.creeTemps(this.data)
    }
    this.creeTemps = function (data , id) {
        if (data != undefined) {
            this.data = data
        } else {
            var h4 = document.createElement("h4")
        }

        var label = "";
        var div = document.createElement("div")
        var div1 = document.createElement("div")
        var div2 = document.createElement("div")
        style1 = ""
        style0 = ""

        if (typeof this.data['type'] == "string") {
            if (this.data['titre'] != undefined && this.data['titre'] != "") {
                if (data == undefined) {
                    h4.className = "header-title"
                    h4.innerText = label
                }
            }
            if (this.data['type'] == "Temps") {
                if (typeof this.data['progres']['label'] == "object") {
                    label = this.data['progres']['label'][0] + this.data['progres']['label'][1]
                }
                if (this.data['vertical']) {
                    if (this.data['progres'] != undefined && this.data['progres'] != "") {
                        div1.className = "progress progress-bar-vertical1"
                        div2.className = "progress-bar"

                        if (this.data['progres']['width'] != undefined) {
                            style0 += "width:" + this.data['progres']['width'] + "!important;margin:10px;"
                        }
                        if (this.data['progres']['height'] != undefined) {
                            style0 += "height:" + this.data['progres']['height'] + "!important;margin:10px;"
                        }
                        if (this.data['progres']['color'] != undefined) {
                            style1 += "background-color:" + this.data['progres']['color'] + ";"
                        }
                        if (this.data['progres']['value'] != undefined) {
                            var value = this.Map(this.data['progres']['value'], this.data['progres']['min'], this.data['progres']['max'], 0, 100)
                            style1 += "height:" + value + "%; width:100%;"
                        }
                        if (label != "") {
                            div2.innerText = this.data['progres']['value'] + label
                        }
                        if (this.data['progres']['id'] != undefined) {
                            div1.id = this.data['progres']['id']
                        }
                        console.log(style0)
                        div1.style = style0
                        div2.style = style1
                        div1.appendChild(div2)
                        div.appendChild(div1)

                        elem = document.getElementById((this.data['titre'] != undefined ? this.data['titre'] : "pas de titre"))
                        elem.appendChild(div1)
                        //console.log(style)
                        //div1.appendChild(div2)
                    }
                } else {
                    if (this.data['progres'] != undefined && this.data['progres'] != "") {
                        div1.className = "progress"
                        div2.className = "progress-bar"
                        if (this.data['progres']['height'] != undefined) {
                            style0 += "height:" + this.data['progres']['height'] + "!important;margin:10px;"
                        }
                        if (this.data['progres']['width'] != undefined) {
                            style0 += "width:" + this.data['progres']['width'] + "!important;margin:10px;"
                        }
                        if (this.data['progres']['color'] != undefined) {
                            style1 += "background-color:" + this.data['progres']['color'] + ";"
                        }
                        if (this.data['progres']['value'] != undefined) {
                            var value = this.Map(this.data['progres']['value'], this.data['progres']['min'], this.data['progres']['max'], 0, 100)
                            style1 += "width:" + value + "%;"
                        }
                        if (label != "") {
                            div2.innerText = this.data['progres']['value'] + label
                        }
                        if (this.data['progres']['id'] != undefined) {
                            div1.id = this.data['progres']['id']
                        }
                        console.log(style0)
                        div1.style = style0
                        div2.style = style1
                        div1.appendChild(div2)
                        div.appendChild(div1)
                        elem = document.getElementById((this.data['titre'] != undefined ? this.data['titre'] : "pas de titre"))
                        elem.appendChild(div1)
                        //console.log(style)
                        //div.appendChild(div1)
                    }
                }
            }
        }
    }
    this.Update = function (newData) {
        var style1 = ""
        var label = ""
        //data = { titre: "", type: "Temps", vertical: false, progres: { id: "", label: ["", " %"], value: 0, max: 0, min: 0, height: "20%", width: "20%", color: "#0acf97", }, }
        var div1 = document.createElement("div")
        if (typeof this.data['progres']['label'] == "object") {
            label = this.data['progres']['label'][0] + this.data['progres']['label'][1]
        }
        if (this.data['progres']['id'] != undefined) {
            var elem = document.getElementById(this.data['progres']['id'])
        }
        if (newData['titre'] != undefined) {
            this.data['titre'] = newData['titre']
        }
        if (newData['type'] != undefined) {

        }
        if (newData['vertical'] != undefined) {
            this.data['vertical'] = ""
            this.data['vertical'] = newData['vertical']
        }
        if (newData['progres'] != undefined) {
            if (newData['progres']['color'] != undefined) {
                this.data['progres']['color'] = newData['progres']['color']
            }
            if (newData['progres']['value'] != undefined) {
                this.data['progres']['value'] = newData['progres']['value']
            }
            if (this.data['vertical']) {
                if (this.data['progres']['color'] != undefined) {
                    style1 += "background-color:" + this.data['progres']['color'] + ";"
                }
                if (this.data['progres']['value'] != undefined) {
                    var value = this.Map(this.data['progres']['value'], this.data['progres']['min'], this.data['progres']['max'], 0, 100)
                    style1 += "height:" + value + "%;"
                }
            } else {
                if (this.data['progres']['color'] != undefined) {
                    style1 += "background-color:" + this.data['progres']['color'] + ";"
                }
                if (this.data['progres']['value'] != undefined) {
                    var value = this.Map(this.data['progres']['value'], this.data['progres']['min'], this.data['progres']['max'], 0, 100)
                    style1 += "width:" + value + "%;"
                }
            }
            div1.style = style1
        }
        if (this.data['vertical'] != undefined) {
            div1.className = "progress-bar"
        }
        if (label != "") {
            div1.innerText = this.data['progres']['value'] + label
        }
        elem.innerText = ""
        elem.appendChild(div1)
        //this.creeTemps()
    }
    this.unObjetTemp = function (obj, key, key1) {

        this.obj1 = obj[key.toString()]
        return this.obj1[key1.toString()]
    }

}