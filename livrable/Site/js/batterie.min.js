function batterie(volt, typeBat1) {
    this.voltages = volt
    function typeBat(volt1) {
        let result = (100 / this.voltages * volt1);
        if (volt1 <= 3) {
            //console.log("1")
            return "#001aff"
        }
        else if (volt1 > 3 && volt1 < 3.30) {
            //console.log("2")
            return "#ff0000"
        } else if (volt1 > 3.30 && volt1 < 3.87) {
            //console.log("3")
            return "#e0e403"
        } else if (volt1 > 3.87) {
            //console.log("4")
            return "#34df09c5"
        }
    }
    this.creeBatterie = function (id, data) {
        this.data = data;
        this.id = id
        for (const [key, value] of Object.entries(this.data)) {
            //console.log(Object.entries(obj.batterie1));
            const valuee = value;
            const keyy = key;
            this.creeCarte(this.id, key)
            for (const [key, value] of Object.entries(valuee)) {
                //console.log(`${key}: ${value}`);
                this.creeBatterieDATA(keyy.toString(), key, value);
            }
        }
    }
    this.creeBatterieDATA = function (id, key, value) {
        let elemt = document.getElementById(id)
        //elemt.innerText = ""
        let result = (100 / this.voltages * value).toFixed(0);
        let progres = document.createElement("div")
        let progres_bar = document.createElement("div")
        let titre = document.createElement("span")
        let titre_volte = document.createElement("span")
        progres.className = "progress progress-bar-vertical"
        progres.style = "width: 60px; margin:10px;"
        progres_bar.className = "progress-bar"
        progres.id = key
        progres_bar.style = "height:" + (100 / this.voltages * value).toString() + "%; background-color:" + typeBat(value) + ";"
        titre.innerText = result.toString() + " %"
        titre_volte.style = "margin-top:20px;"
        titre_volte.innerText = value + " V"

        progres_bar.appendChild(titre)
        progres_bar.appendChild(titre_volte)
        progres.appendChild(progres_bar)
        elemt.appendChild(progres)

    }
    this.creeCarte = function (id, idname) {
        this.id1 = id
        let de = document.getElementById(this.id1)
        let div1 = document.createElement("div")
        let card = document.createElement("div")
        let card_body = document.createElement("div")
        let div_proges = document.createElement("div")
        let titre = document.createElement("h4")
        titre.className = "header-title"
        titre.innerText = idname
        card_body.id = idname
        card_body.className = "card-body"
        card.className = "card"
        div1.className = "col-xl-4 col-lg-6 order-lg-3"
        card_body.appendChild(titre)
        card.appendChild(card_body)
        div1.appendChild(card)
        de.appendChild(div1)
    }
    this.UpdateAll = function (obj) {
        this.obj1 = obj
        this.id
        for (const [key, value] of Object.entries(this.obj1)) {
            //console.log(Object.entries(obj.batterie1));
            const valuee = value;
            const keyy = key;
            let titre = document.createElement("h4")
            let ele = document.getElementById(key.toString())
            ele.innerText = ""
            titre.innerText = key
            ele.appendChild(titre)
            //this.creeCarte1(this.id, key)
            if (valuee != undefined) {
                for (const [key, value] of Object.entries(valuee)) {
                    //console.log(`${key}: ${value}`);
                    this.creeBatterieDATA(keyy.toString(), key, value);
                }
            }
        }
    }
    this.MoyenneBat = function (elem = "", objet, ob = false) {
        this.Moyenne = 0;
        let resultat = 0;
        let nombre = 0;
        let somme = 0;
        this.input = objet;
        let liste = [];

        for (const [key, value] of Object.entries(this.input)) {
            const keys = value;
            //console.log(keys)
            if (keys != undefined) {
                for (const [key, value] of Object.entries(keys)) {
                    let resul = ((100 / this.voltages) * value).toFixed(2);
                    liste.push(parseFloat(resul))
                }
            }
            nombre = liste.length;
            somme = 0;
            for (i = 0; i < nombre; i++) {
                somme += liste[i];
            }
            resultat = somme / nombre;
            liste = [];
        }
        if (elem != "") {
            this.elemPourCent = elem;
            let affiche = document.getElementById(this.elemPourCent)
            affiche.innerText = ""
            affiche.innerText = " " + resultat.toFixed(2) + " %"
        }
        this.input = {};
        if (ob == true) {
            resliste = []
            resliste.push(resultat)
            resliste.push(100 - resultat)
            return resliste;
        } else {
            return resultat;
        }
    }
    this.unObjet = function (obj, key) {
        obj1 = {}
        obj1[key.toString()] = obj[key.toString()]
        return obj1
    }
    this.betweenMinAndMax = function (min, max) {
        let reslut = 0
        for (let index = min; index < max; index++) {
            reslut += 1
        }
        return reslut
    }
}
